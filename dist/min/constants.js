/*
Quartz cron string creator (v.0.0.9)
*/
const labels={days:['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'], months:['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],}const SEVEN=Array.from({length:7},(_, i)=>i+1)const THIRTYONE=Array.from({length:31},(_, i)=>i+1)const THIRTY=Array.from({length:30},(_, i)=>i+1)const TWENTYNINE=Array.from({length:29},(_, i)=>i+1)const TWENTYEIGTH=Array.from({length:28},(_, i)=>i+1)const NUMBERS={ZERO:0, ONE:1, SEVEN:7, TWELVE:12, TWENTYTHREE:23, TWENTYEIGTH:28, TWENTYNINE:29, THIRTY:30, THIRTYONE:31, FIFTYNINE:59, YEARSTART:1970, YEAREND:2099,}const monthEnds=[NUMBERS.THIRTYONE, NUMBERS.TWENTYEIGTH, NUMBERS.THIRTYONE, NUMBERS.THIRTY, NUMBERS.THIRTYONE, NUMBERS.THIRTY, NUMBERS.THIRTYONE, NUMBERS.THIRTYONE, NUMBERS.THIRTY, NUMBERS.THIRTYONE, NUMBERS.THIRTY, NUMBERS.THIRTYONE,];const bounds={seconds:{min:NUMBERS.ZERO, max:NUMBERS.FIFTYNINE}, minutes:{min:NUMBERS.ZERO, max:NUMBERS.FIFTYNINE}, hour:{min:NUMBERS.ZERO, max:NUMBERS.TWENTYTHREE}, week:{min:NUMBERS.ONE, max:NUMBERS.SEVEN}, month:{min:NUMBERS.ONE, max:NUMBERS.TWELVE}, year:{min:NUMBERS.YEARSTART, max:NUMBERS.YEAREND},}const errors={malformed:{seconds:'Seconds are not well formatted', minutes:'Minutes are not well formatted', hours:'Hours are not well formatted', months:'Months are not well formatted', years:'Years are not well formatted', dom:'Dom has unexpected value', dow:'Dow has unexpected value'}, invalidDate:'Invalid Date', staticValidationParamMissing:'static validation needs an expression to validate', domdowExclusivity:'either dom either dow must contain "?"'}const rx={asterx:/^\*(\/\d*)?$/, zeroFiftynine:/^([0-5]{1}[0-9]{1}|[0-9]{1})$/, zeroTwentythree:/^([01]\d|2[0-3]|\d)$/, oneThirtyone:/^(?:[012]\d|3[0,1]|[1-9]{1})$/, oneThirtyoneW:/^(?:[012]\d|3[0,1]|[1-9]{1})W$/, weekday:/^(?:[1-7]{1}|SUN|MON|TUE|WED|THU|FRI|SAT)$/i, weekdayAfterX:/^(?:[1-7]{1}|SUN|MON|TUE|WED|THU|FRI|SAT)\/(?:[012]\d|3[0,1]|[1-9]{1})$/i, LW:/^LW?$/, Lx:/^(L-([012]\d|3[0,1]|[1-9]{1}))$/, xL31:/^([012]\d|3[0,1]|[1-9]{1})L$/, xLweekday:/^([1-7]{1}|SUN|MON|TUE|WED|THU|FRI|SAT)L$/i, nthWeekDay:/^([1-7]{1}|SUN|MON|TUE|WED|THU|FRI|SAT)\#[1-5]{1}$/i, quest:/^(\?)$/, dom:/^(\?)|(\*)|()$/, dow:/^(\?)|$/, month:/^(^0?[1-9]$)|(^1[0-2]$)|(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)$/i, year:/^(19[7-9]\d)|(20\d\d)$/, wildCadence:/^\d*$/, splitter:/^([\d,\w]*)(-([\d\w]*))?(\/([\d\w]*))?$/, next:{hasMonths:/JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC/, hasWeekdays:/SUN|MON|TUE|WED|THU|FRI|SAT/}, ranges:{zero59cadence:/^(\*|(\d)|([1-5][0-9]))(\/((\d)|([1-5][0-9])))$/, one7cadence:/^(\*|([1-7]?))(\/([1-7]?))$/, one12cadence:/^(\*|([1-9][0-2]?))(\/([1-9][0-2]?))$/, wildRangeCadence:/^([\d,]+)-([\d,]+)(\/(\d*))?$/, wildStartCadence:/^(\*|(\d*))(\/(\d*))$/}}const defaults={s:'0', i:'0', h:'0', dom:'*', m:'*', dow:'?', y:'*',}module.exports={labels, monthEnds, errors, defaults, rx, bounds, NUMBERS, SEVEN, THIRTYONE, THIRTY, TWENTYNINE, TWENTYEIGTH}