/*
Quartz cron string creator (v.0.0.6)
*/
const defaults={s:'0', i:'0', h:'0', dom:'*', m:'*', dow:'?', y:'*',}, rx={asterx:/^\*(\/\d*)?$/, zeroFiftynine:/^([0-5]{1}[0-9]{1}|[0-9]{1})$/, zeroTwentythree:/^([01]\d|2[0-3]|\d)$/, oneThirtyone:/^(?:[012]\d|3[0,1]|[1-9]{1})$/, oneThirtyoneW:/^(?:[012]\d|3[0,1]|[1-9]{1})W$/, weekday:/^(?:[1-7]{1}|SUN|MON|TUE|WED|THU|FRI|SAT)$/i, weekdayAfterX:/^(?:[1-7]{1}|SUN|MON|TUE|WED|THU|FRI|SAT)\/(?:[012]\d|3[0,1]|[1-9]{1})$/i, LW:/^LW?$/, Lx:/^(L-([012]\d|3[0,1]|[1-9]{1}))$/, xL31:/^([012]\d|3[0,1]|[1-9]{1})L$/, xLweekday:/^([1-7]{1}|SUN|MON|TUE|WED|THU|FRI|SAT)L$/i, nthWeekDay:/^([1-7]{1}|SUN|MON|TUE|WED|THU|FRI|SAT)\#[1-5]{1}$/i, quest:/^(\?)$/, dom:/^(\?)|(\*)|()$/, dow:/^(\?)|$/, month:/^(^0?[1-9]$)|(^1[0-2]$)|(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)$/i, year:/^(19[7-9]\d)|(20\d\d)$/, wildCadence:/^\d*$/, splitter:/^([\d,\w]*)(-([\d\w]*))?(\/([\d\w]*))?$/}, getRangeValidator=({mainRx, cadenceRx})=> val=>{const v=`${val}`;if(v.match(rx.asterx))return true const s=v.match(rx.splitter);if(!s)return false const starts=s[1].split(/,/), to=s[3], cadence=s[5];return(starts.length && starts.every(start=> start.match(mainRx))&&(!to ||(to.match(mainRx)&&(!cadence || !!cadence.match(cadenceRx)))))}, getValidator=rxs=> v=> rxs.find(r=>{if(typeof r==='function')return r(v)return `${v}`.match(r)}), rx059=getRangeValidator({mainRx:rx.zeroFiftynine, cadenceRx:rx.zeroFiftynine}), rx023=getRangeValidator({mainRx:rx.zeroTwentythree, cadenceRx:rx.zeroTwentythree}), rx131=getRangeValidator({mainRx:rx.oneThirtyone, cadenceRx:rx.oneThirtyone}), rxmonth=getRangeValidator({mainRx:rx.month, cadenceRx:rx.month}), rxYear=getRangeValidator({mainRx:rx.year, cadenceRx:rx.wildCadence}), rxWeekday=getRangeValidator({mainRx:rx.weekday, cadenceRx:rx.weekday}), rxDom=getValidator([rx.oneThirtyone, rx.quest, rx.asterx, rx.weekdayAfterX, rx131, rx.LW, rx.Lx, rx.xL31, rx.oneThirtyoneW]), rxDow=getValidator([rx.quest, rxWeekday, rx.xLweekday, rx.nthWeekDay]), validators={second:rx059, minute:rx059, hour:rx023, month:rxmonth, year:rxYear, dayOfMonth:rxDom, dayOfWeek:rxDow}, fieldCorrelationValidators=[{validator:({dom, dow})=> !(dow!=='?' && dom!=='?'), message:'either dom either dow must contain "?"'}], now=new Date(), yearNow=now.getFullYear(), removeSpaces=s=> `${s}`.replace(/\s/mg, '');module.exports={validators, fieldCorrelationValidators, defaults, yearNow, removeSpaces};